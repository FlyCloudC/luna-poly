package KCN-judu/luna-poly/dense

// Values
fn coe[A : Default + Eq + Semiring + HomomorphismNat](Int) -> Polynomial[A]

fn to_poly[A : Eq + Semiring](Array[A]) -> Polynomial[A]

fn var[A : Default + Eq + Semiring]() -> Polynomial[A]

// Types and methods
type Polynomial
impl Polynomial {
  convolution[A : Default + Semiring](Self[A], Self[A]) -> Self[A]
  empty[A : Default](cap~ : Int) -> Self[A]
}
impl[V : Compare] Compare for Polynomial[V]
impl[V : Eq] Eq for Polynomial[V]

// Type aliases

// Traits
trait HomomorphismNat

trait Semiring

